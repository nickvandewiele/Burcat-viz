var entries = ['formula', 'formula_name_structure_1', 'hf298_1','reference_1'];

d3.xml("/data/BURCAT_THR.xml", function(xml) {

	var table = d3.select("table");
	var thead = d3.select("thead");
	//add header row:
	var header_entries = ["CAS"].concat(entries);
	thead.selectAll("th").data(header_entries).enter().append('th').text(function(d) {
		return d;
	});

	//append rows for each entry of 'specie':
	var species = d3.select(xml).selectAll("specie")[0];
	var tr = d3.select("tbody").selectAll("tr").data(species).enter().append("tr");

	// CAS
	tr.selectAll("tr").data(function(d) {
		return d3.select(d)[0];
	}).enter().append("td").text(function(d) {
		var cas = d.getAttribute("CAS");
		return cas;
	}).attr('id', 'CAS');

	//enter data for the child nodes:
	for (var i = 0; i < entries.length; i++) {
		var entry = entries[i];
		tr.selectAll("tr").data(function(d) {
			var spc = d3.select(d);
			var e = spc.select(entry);
			return e[0];
		}).enter().append("td").text(function(d) {
			var x = d;
			return (d == null) ? "" : d.textContent;
		}).attr('id', entry);
	}
	
	 //remove CAS number from td:
	 d3.selectAll('#CAS').text('');
	 //append an img element and set it to the image generated by the CAS number:
	 d3.selectAll('#CAS').append("img")
	 //.attr("src", function(d){return createurl(d.getAttribute("CAS"));})
	 .attr("alt", function(d){return d.getAttribute("CAS");});
	 

	/*
	 * https://github.com/jmosbech/StickyTableHeaders
	 * bower install StickyTableHeaders
	 */
	$('table').stickyTableHeaders();

	/*
	*  https://github.com/Sjeiti/TinySort
	*  bower install tinysort
	*/

	//keep track of the order in which the IDs are ordered:
	var aAsc = [];

	function sortTable(id) {
		aAsc[id] = aAsc[id] == 'asc' ? 'desc' : 'asc';
		//use jQuery ID selector to access td element with ID = parameter:
		$('table>tbody>tr').tsort('td#' + id, {
			order : aAsc[id]
		});

	}

	//select thead header elements: which contain the same strings as the td elements in tbody:
	d3.selectAll("thead th").on('click', sortTable);

	//append 'change' event to menu select elements:
	var menu = d3.select("#menu select").on("change", change);

	function redraw() {
		sortTable(menu.property("value"));
	}

	function change() {
		d3.transition().each(redraw);
	}
	
	//create menu options:
	menu.selectAll("option")
      .data(header_entries)
    .enter().append("option")
      .text(function(d) { return d; });
	//set default option:
  	menu.property("value", "formula");
  	
  	//we push a new header entry 'inchi', and enter the new data array in the header rows:
  	header_entries.push('inchi');
	thead.selectAll("th").data(header_entries).enter().append('th').text(function(d) {
		return d;
	});
	//we select all table rows and add an entry for the inchi table cell:
	tr.selectAll("tr").data(function(d) {
		return d3.select(d)[0];
	}).enter().append("td").text(function(d) {
		var cas = d.getAttribute("CAS");
		var inchi = get_inchi(cas);
		return inchi;
	}).attr('id', 'inchi');
	
});

function httpGet(theUrl)
{
    var xmlHttp = null;

    xmlHttp = new XMLHttpRequest();
    //xmlHttp.timeout = 1000;//only possible for asynchronous requests
    xmlHttp.open( "GET", theUrl, false );//asynchronous = true/false
    xmlHttp.send( null );
    return xmlHttp.responseText;
}
function get_inchi(cas_string){
	if(cas_string.indexOf('N/A')>-1) return '';
	cas_arr = cas_string.split(' ');
	var cas = cas_arr[0]; 
	var base_url = 'http://cactus.nci.nih.gov/chemical/structure/';
	var inchi = httpGet(base_url + cas + "/stdinchi");
	//var inchi = base_url + cas + "/stdinchi";
	return inchi.indexOf("404") > -1 ? '': inchi;
}
function createurl(cas) {
	var base_url = "http://cactus.nci.nih.gov/chemical/structure/";
	var background_color = "e5f5f9";//hex
	return base_url + cas + "/image?format=png&bgcolor=%23"+background_color+"&header=\"" + cas +"\"";
}
